name: Publish to Github Pages
run-name: Publish to Github Pages
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-wasi

      - name: Download and unpack WASI SDK
        run: curl -s -L https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-20/wasi-sdk-20.0-linux.tar.gz | tar xvz
      - name: Build WASM
        run: cargo build --release --target=wasm32-wasi -p image-palette-recoloring-c
        env:
          WASM_SYSROOT: ${{ github.workspace }}/wasi-sdk-20.0/share/wasi-sysroot
          CC: ${{ github.workspace }}/wasi-sdk-20.0/bin/clang

      - name: Download and unpack Binaryen
        run: curl -s -L https://github.com/WebAssembly/binaryen/releases/download/version_113/binaryen-version_113-x86_64-linux.tar.gz | tar xvz

      - name: Optimize WASM
        run: binaryen-version_113/bin/wasm-opt -O3 -o image-palette-recoloring-web/dist/image_palette_recoloring_c.wasm target/wasm32-wasi/release/image_palette_recoloring_c.wasm

      - name: Strip WASM
        run: wasi-sdk-20.0/bin/strip image-palette-recoloring-web/dist/image_palette_recoloring_c.wasm

      - working-directory: image-palette-recoloring-web
        run: npm install
      - working-directory: image-palette-recoloring-web
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./image-palette-recoloring-web/dist/

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v2


